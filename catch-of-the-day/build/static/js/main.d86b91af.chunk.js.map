{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","AuthProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.d86b91af.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n  }\n\n  goToStore = (event) => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    order: PropTypes.object.isRequired,\n    removeFromOrder: PropTypes.func.isRequired,\n\n  }\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name} {formatPrice(count * fish.price)}\n            <button\n              type=\"button\"\n              onClick={() => this.props.removeFromOrder(key)}\n            >\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import Rebase from 're-base';\n// import {initializeApp, database} from 'firebase';\nimport firebase from 'firebase/app';\n// import 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyAUUlzTXc3gyge7z257x324P7hE72a_VSc',\n  authDomain: 'catch-of-the-day-adam-hursey.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-adam-hursey.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebase.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n   nameRef = React.createRef();\n   priceRef = React.createRef();\n   statusRef = React.createRef();\n   descRef = React.createRef();\n   imageRef = React.createRef();\n\n   static propTypes = {\n     addFish: PropTypes.func.isRequired,\n   }\n\n   createFish = (event) => {\n     // 1. stop from submitting\n     event.preventDefault();\n     const fish = {\n       name: this.nameRef.current.value,\n       price: parseFloat(this.priceRef.current.value),\n       status: this.statusRef.current.value,\n       desc: this.descRef.current.value,\n       image: this.imageRef.current.value,\n     };\n     this.props.addFish(fish);\n     //  refresh this form\n     event.currentTarget.reset();\n   }\n\n   render() {\n     return (\n       <form className=\"fish-edit\" onSubmit={this.createFish}>\n         <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n         <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n         <select name=\"status\" ref={this.statusRef}>\n           <option value=\"available\">Fresh</option>\n           <option value=\"unavailable\">Sold Out</option>\n         </select>\n         <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n         <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n         <button type=\"submit\">+ Add Fish</button>\n       </form>\n     );\n   }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n   static propTypes ={\n     fish: PropTypes.shape({\n       image: PropTypes.string,\n       name: PropTypes.string,\n       desc: PropTypes.string,\n       status: PropTypes.string,\n       price: PropTypes.number,\n     }).isRequired,\n     index: PropTypes.string.isRequired,\n     updateFish: PropTypes.func.isRequired,\n     deleteFish: PropTypes.func.isRequired,\n   }\n\n   handleChange = (event) => {\n     // update fish\n     // 1. Take copy of current fish\n     const updatedFish = {\n       ...this.props.fish,\n       [event.currentTarget.name]: event.currentTarget.value,\n     };\n     // 2.\n     this.props.updateFish(this.props.index, updatedFish);\n   }\n\n\n   render() {\n     return (\n       <div className=\"fish-edit\">\n         <input\n           type=\"text\"\n           name=\"name\"\n           onChange={this.handleChange}\n           value={this.props.fish.name}\n         />\n         <input\n           type=\"text\"\n           name=\"price\"\n           onChange={this.handleChange}\n           value={this.props.fish.price}\n         />\n         <select\n           type=\"text\"\n           name=\"status\"\n           onChange={this.handleChange}\n           value={this.props.fish.status}\n         >\n           <option value=\"available\">Fresh</option>\n           <option value=\"unavailable\">Sold Out</option>\n         </select>\n         <textarea\n           name=\"desc\"\n           onChange={this.handleChange}\n           value={this.props.fish.desc}\n         />\n         <input\n           type=\"text\"\n           name=\"image\"\n           onChange={this.handleChange}\n           value={this.props.fish.image}\n         />\n         <button type=\"button\" onClick={() => this.props.deleteFish(this.props.index)}> Remove Fish </button>\n       </div>\n     );\n   }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"Login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in the manage your stores inventory</p>\n    <button\n      className=\"github\"\n      type=\"button\"\n      onClick={() => props.authenticate('Github')}\n    >\n      Login With Github\n    </button>\n    <button\n      className=\"facebook\"\n      type=\"button\"\n      onClick={() => props.authenticate('Facebook')}\n    >\n      Login With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../base';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\n\nclass Inventory extends React.Component {\n  static propTypes ={\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    addFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired,\n  }\n\n  state = {\n    uid: null,\n    owner: null,\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. Look up current store\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. Claim if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. Set state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const AuthProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(AuthProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button type=\"button\" onClick={this.logout}>Log out</button>;\n\n    // check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        {logout}\n        <h2>Inventory</h2>\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button type=\"button\" onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc:\n      'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc:\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc:\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc:\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc:\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc:\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc:\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc:\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n   static propTypes = {\n     addToOrder: PropTypes.func.isRequired,\n     index: PropTypes.string.isRequired,\n     details: PropTypes.shape({\n       image: PropTypes.string,\n       name: PropTypes.string,\n       desc: PropTypes.string,\n       status: PropTypes.string,\n       price: PropTypes.number,\n     }).isRequired,\n   }\n\n   handleClick = () => {\n     this.props.addToOrder(this.props.index);\n   }\n\n   render() {\n     const {\n       image, name, desc, price, status,\n     } = this.props.details;\n     const isAvailable = status === 'available';\n     return (\n       <li className=\"menu-fish\">\n         <img src={image} alt={name} />\n         <h3 className=\"fish-name\">\n           {name}\n           <span className=\"price\">{formatPrice(price)}</span>\n         </h3>\n         <p>{desc}</p>\n         <button type=\"button\" onClick={this.handleClick} disabled={!isAvailable}>{isAvailable ? 'Add To Order' : 'Sold Out!'}</button>\n       </li>\n     );\n   }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n\n  addFish = (fish) => {\n    // 1. Take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. set new fishes to state\n    this.setState({\n      fishes,\n    });\n  }\n\n  updateFish = (key, updateFish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = updateFish;\n    this.setState({ fishes });\n  }\n\n  deleteFish = (key) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  }\n\n  addToOrder = (key) => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Add to order or update number in order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  }\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}